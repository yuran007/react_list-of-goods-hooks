{"version":3,"sources":["components/Button.tsx","components/List.tsx","App.tsx","index.tsx"],"names":["Button","txt","handleClick","type","onClick","List","list","map","item","compareGoods","good1","good2","orderBy","localeCompare","length","goodsFromServer","App","useState","setList","clicked","setClicked","className","prevList","reverse","sort","a","b","ReactDOM","render","document","getElementById"],"mappings":"iOAKaA,EAA0B,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,IAAKC,EAAkB,EAAlBA,YAC7C,OACE,wBACEC,KAAK,SACLC,QAASF,EAFX,SAIGD,KCLMI,EAAwB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtC,OACE,6BACGA,EAAKC,KAAI,SAAAC,GAAI,OAAI,6BAAgBA,GAAPA,SCF3BC,EAAe,SAACC,EAAeC,EAAeC,GAClD,OAAQA,GACN,IAAK,WACH,OAAOF,EAAMG,cAAcF,GAC7B,IAAK,SACH,OAAOD,EAAMI,OAASH,EAAMG,OAE9B,QACE,OAAO,IAIPC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA4CaC,EAzCO,WACpB,MAAwBC,mBACtBF,GADF,mBAAOT,EAAP,KAAaY,EAAb,KAIA,EAA8BD,oBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KAkBA,OACE,sBAAKC,UAAU,MAAf,UACE,uCACEF,EAGE,qCACE,cAAC,EAAD,CAAMb,KAAMA,IACZ,cAAC,EAAD,CAAQL,IAAI,UAAUC,YAxBH,WAC3BgB,GAAQ,SAAAI,GAAQ,OAAI,YAAIA,GAAUC,gBAwB1B,cAAC,EAAD,CAAQtB,IAAI,sBAAsBC,YArBd,WAC5BgB,GAAQ,SAAAI,GAAQ,OAAI,YAAIA,GAAUE,MAAK,SAACC,EAAGC,GAAJ,OAAUjB,EAAagB,EAAGC,EAAG,qBAqB5D,cAAC,EAAD,CAAQzB,IAAI,iBAAiBC,YAlBX,WAC1BgB,GAAQ,SAAAI,GAAQ,OAAI,YAAIA,GAAUE,MAAK,SAACC,EAAGC,GAAJ,OAAUjB,EAAagB,EAAGC,EAAG,mBAkB5D,cAAC,EAAD,CAAQzB,IAAI,QAAQC,YAfT,WACnBgB,EAAQH,SAOF,cAAC,EAAD,CAAQd,IAAI,QAAQC,YAAa,kBAAMkB,GAAW,UCxD5DO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5d1008ae.chunk.js","sourcesContent":["type Props = {\n  txt: string;\n  handleClick:(event: React.MouseEvent<HTMLButtonElement>) => void\n};\n\nexport const Button: React.FC<Props> = ({ txt, handleClick }) => {\n  return (\n    <button\n      type=\"button\"\n      onClick={handleClick}\n    >\n      {txt}\n    </button>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  list: string[];\n};\n\nexport const List: React.FC<Props> = ({ list }) => {\n  return (\n    <ul>\n      {list.map(item => <li key={item}>{item}</li>)}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Button } from './components/Button';\nimport { List } from './components/List';\n\ntype OrderBy = 'alphabet' | 'length';\n\nconst compareGoods = (good1: string, good2: string, orderBy: OrderBy) => {\n  switch (orderBy) {\n    case 'alphabet':\n      return good1.localeCompare(good2);\n    case 'length':\n      return good1.length - good2.length;\n\n    default:\n      return 0;\n  }\n};\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [list, setList] = useState(\n    goodsFromServer,\n  );\n\n  const [clicked, setClicked] = useState(false);\n\n  const handlerToggleReverse = () => {\n    setList(prevList => [...prevList].reverse());\n  };\n\n  const handlerSortByAlphabet = () => {\n    setList(prevList => [...prevList].sort((a, b) => compareGoods(a, b, 'alphabet')));\n  };\n\n  const handlerSortByLength = () => {\n    setList(prevList => [...prevList].sort((a, b) => compareGoods(a, b, 'length')));\n  };\n\n  const handlerReset = () => {\n    setList(goodsFromServer);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Goods</h1>\n      {!clicked\n        ? <Button txt=\"Start\" handleClick={() => setClicked(true)} />\n        : (\n          <>\n            <List list={list} />\n            <Button txt=\"Reverse\" handleClick={handlerToggleReverse} />\n            <Button txt=\"Sort alphabetically\" handleClick={handlerSortByAlphabet} />\n            <Button txt=\"Sort by length\" handleClick={handlerSortByLength} />\n            <Button txt=\"Reset\" handleClick={handlerReset} />\n          </>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}